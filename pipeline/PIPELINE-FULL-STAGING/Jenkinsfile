pipeline {
    agent any
    stages {
        stage('Clean'){    
            steps {
                deleteDir()
                sh 'printenv'
            }
        }

        stage('Checkout') {
            steps {
                // Get some code from a CodeCommit repository
                sh "git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/todo-list-serverless"
            }
        }
        stage('Prepare Build Environment') {
            steps {
                    sh """
                        python3 -m venv venv
                        . venv/bin/activate
                        pip install aws-sam-cli
                    """            
            }
        } 
        stage('Security'){
            steps{
                    // Security
                    echo 'Security'
                    sh '''
                        . venv/bin/activate                    
                        pip install safety
                        safety check -r todo-list-serverless/src/requirements.txt
                    '''
            }
        }    
        stage('Build') {
            steps {
                dir("todo-list-serverless") {                
                    // Build release
                    echo 'Maybe something like sam build?'
                    sh """
                        sam build
                    """                     
                    echo 'Execute something like coverage run -m & coverage report -m'
                }
            }
        }
        stage('Deploy'){
            steps{
                dir("todo-list-serverless") {
                    // Deploy architecture
                    sh "yes | sam deploy --template-file template.yaml --stack-name ${env.STACK_NAME}-${env.ENVIRONMENT} --parameter-overrides=Env=\"${env.ENVIRONMENT}\" Environment=${env.ENVIRONMENT}"
                }   
            }
        }
        stage('Integration Test after deploy'){
            steps{
                dir("todo-list-serverless") {
                    // Unittest or pytest                   
                    // Unitary testing -> unittest or pytest against the lambda functions.
                    echo 'test all methods works fine'
                }   
            }
        }
    }
}
